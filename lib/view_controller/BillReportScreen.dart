import 'dart:convert';
import 'package:flutter/material.dart';
import 'package:http/http.dart' as http;

class BillReportScreen extends StatefulWidget {
  final String userId;
  final String apiToken;

  const BillReportScreen({
    super.key,
    required this.userId,
    required this.apiToken,
  });

  @override
  State<BillReportScreen> createState() => _BillReportScreenState();
}

class _BillReportScreenState extends State<BillReportScreen> {
  bool isLoading = true;
  List<dynamic> billReport = [];

  @override
  void initState() {
    super.initState();
    fetchBillReport();
  }

  Future<void> fetchBillReport() async {
    try {
      var request = http.MultipartRequest(
        'POST',
        Uri.parse(
          "https://blueviolet-spoonbill-658373.hostingersite.com/demotesting/api/v1/generate-bill-report",
        ),
      );

      request.fields['user_id'] = widget.userId;
      request.fields['apiToken'] = widget.apiToken;

      var response = await request.send();
      var responseBody = await response.stream.bytesToString();

      if (response.statusCode == 200) {
        final data = jsonDecode(responseBody);
        setState(() {
          billReport = data['generate_bill_report'] ?? [];
          isLoading = false;
        });
      } else {
        setState(() {
          isLoading = false;
        });
      }
    } catch (e) {
      setState(() {
        isLoading = false;
      });
    }
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: const Text("Bill Report"),
        backgroundColor: const Color(0xFFD2B48C),
      ),
      body: isLoading
          ? const Center(child: CircularProgressIndicator())
          : billReport.isEmpty
          ? const Center(
        child: Text(
          "No Bill Reports Found",
          style: TextStyle(fontSize: 16, fontWeight: FontWeight.w500),
        ),
      )
          : ListView.builder(
        padding: const EdgeInsets.all(12),
        itemCount: billReport.length,
        itemBuilder: (context, index) {
          var item = billReport[index];
          return Card(
            shape: RoundedRectangleBorder(
              borderRadius: BorderRadius.circular(16),
            ),
            elevation: 3,
            margin: const EdgeInsets.symmetric(vertical: 8),
            child: Padding(
              padding: const EdgeInsets.all(16),
              child: Column(
                crossAxisAlignment: CrossAxisAlignment.start,
                children: [
                  // ✅ Bill Date
                  Text(
                    "Date: ${item['date'] ?? ''}",
                    style: const TextStyle(
                      fontWeight: FontWeight.bold,
                      fontSize: 16,
                    ),
                  ),
                  const SizedBox(height: 6),

                  // ✅ Head
                  Text("Head: ${item['head'] ?? ''}"),
                  const SizedBox(height: 6),

                  // ✅ Mode
                  Text("Mode: ${item['mode'] ?? ''}"),
                  const SizedBox(height: 6),

                  // ✅ Amount
                  Text(
                    "Amount: ₹${item['amount'] ?? 0}",
                    style: const TextStyle(
                      fontWeight: FontWeight.w600,
                    ),
                  ),
                  const SizedBox(height: 6),

                  // ✅ Bill Generated By (only if userId = 1)
                  if (widget.userId == "1") ...[
                    Text("Bill Generated By: Leena Sharma"),
                    const SizedBox(height: 6),
                  ],

                  // ✅ Bill Photo with click
                  if (item['bill_photo'] != null &&
                      item['bill_photo'].toString().isNotEmpty)
                    GestureDetector(
                      onTap: () {
                        Navigator.push(
                          context,
                          MaterialPageRoute(
                            builder: (_) => FullScreenImage(
                              imageUrl: item['bill_photo'],
                            ),
                          ),
                        );
                      },
                      child: ClipRRect(
                        borderRadius: BorderRadius.circular(12),
                        child: Image.network(
                          item['bill_photo'],
                          height: 160,
                          width: double.infinity,
                          fit: BoxFit.cover,
                          errorBuilder:
                              (context, error, stackTrace) {
                            return const Text(
                                "Image not available");
                          },
                        ),
                      ),
                    ),
                ],
              ),
            ),
          );
        },
      ),
    );
  }
}

/// ✅ Full Screen Image Viewer
class FullScreenImage extends StatelessWidget {
  final String imageUrl;

  const FullScreenImage({super.key, required this.imageUrl});

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      backgroundColor: Colors.black,
      appBar: AppBar(
        backgroundColor: Colors.transparent,
        iconTheme: const IconThemeData(color: Colors.white),
      ),
      body: Center(
        child: InteractiveViewer(
          child: Image.network(
            imageUrl,
            fit: BoxFit.contain,
            errorBuilder: (context, error, stackTrace) {
              return const Text(
                "Failed to load image",
                style: TextStyle(color: Colors.white),
              );
            },
          ),
        ),
      ),
    );
  }
}
